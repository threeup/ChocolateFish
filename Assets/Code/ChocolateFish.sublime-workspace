{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"loo",
				"loopCount"
			],
			[
				"adju",
				"adjustedX"
			],
			[
				"til",
				"tileName"
			],
			[
				"w",
				"w"
			],
			[
				"va",
				"variantDict"
			],
			[
				"spr",
				"spriteVariant"
			],
			[
				"spri",
				"spriteVariant"
			],
			[
				"sp",
				"sprite"
			],
			[
				"e",
				"e"
			],
			[
				"raw",
				"rawArray"
			],
			[
				"char",
				"charArray"
			],
			[
				"ne",
				"nextSprite"
			],
			[
				"Spr",
				"SpriteDict"
			],
			[
				"adj",
				"adjustedY"
			],
			[
				"ch",
				"charArray"
			],
			[
				"Sp",
				"SpriteDict"
			],
			[
				"sec",
				"sectorList"
			],
			[
				"des",
				"desiredVariant"
			],
			[
				"desired",
				"desiredName"
			],
			[
				"Mesh",
				"MeshFilter"
			],
			[
				"mesHfilter",
				"meshfilter"
			],
			[
				"pre",
				"pre	Tag"
			],
			[
				"Sc",
				"ScreenType"
			],
			[
				"Scree",
				"screenManager"
			],
			[
				"Boss",
				"BossState"
			],
			[
				"act",
				"actorController"
			],
			[
				"Actor",
				"ActorState"
			],
			[
				"Main",
				"MainBodyState"
			],
			[
				"con",
				"controllerId"
			],
			[
				"wigl",
				"wiggleAdjust"
			],
			[
				"x",
				"x"
			],
			[
				"eul",
				"localEulerAngles"
			],
			[
				"BrainT",
				"BrainTargetType"
			],
			[
				"OnC",
				"OnChangeDelegate"
			],
			[
				"isL",
				"isLastInitialized"
			],
			[
				"Bra",
				"BrainEntity"
			],
			[
				"timeU",
				"timeUntilThought"
			],
			[
				"Dire",
				"DirectorMachine"
			],
			[
				"cur",
				"currentTime"
			],
			[
				"curr",
				"currentTime"
			],
			[
				"Fid",
				"FishBody"
			],
			[
				"Gree",
				"GreenObject"
			],
			[
				"lo",
				"localEulerAngles"
			],
			[
				"force",
				"forceTypeCount"
			],
			[
				"for",
				"forceTypeCount"
			],
			[
				"Fo",
				"ForceType"
			],
			[
				"fo",
				"forceDirection"
			],
			[
				"Dir",
				"DirectorState"
			],
			[
				"Cam",
				"CameraControl"
			],
			[
				"Handle",
				"HandleRelease"
			],
			[
				"y",
				"y"
			],
			[
				"W",
				"WATER_MAX_X"
			],
			[
				"mDebr",
				"mDebrisOnePool"
			],
			[
				"Ren",
				"RenderObject"
			],
			[
				"desi",
				"desiredMinSpeed"
			]
		]
	},
	"buffers":
	[
		{
			"file": "ChocolateFish.sublime-project",
			"settings":
			{
				"buffer_size": 73,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/I/w/TauDisaster/taudisaster.sublime-project",
			"settings":
			{
				"buffer_size": 125,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/I/wudk/StrategyGame/Source/StrategyGame/Private/AI/StrategyAIAction.cpp",
		"/I/wudk/StrategyGame/Source/StrategyGame/Private/AI/StrategyAIController.cpp",
		"/I/wudk/StrategyGame/Source/StrategyGame/Private/AI/StrategyAIDirector.cpp",
		"/I/wudk/StrategyGame/Source/StrategyGame/Private/Buildings/StrategyBuilding.cpp",
		"/I/wudk/StrategyGame/Source/StrategyGame/Private/Buildings/StrategyBuilding_Brewery.cpp",
		"/I/wudk/StrategyGame/Source/StrategyGame/Private/Pawns/StrategyAnimInstance.cpp",
		"/I/wudk/StrategyGame/Source/StrategyGame/Private/Pawns/StrategyAttachment.cpp",
		"/I/wudk/StrategyGame/Source/StrategyGame/Private/Pawns/StrategyCameraComponent.cpp",
		"/I/wudk/StrategyGame/Source/StrategyGame/Private/Pawns/StrategyChar.cpp",
		"/I/wudk/StrategyGame/Source/StrategyGame/Private/AI/StrategyAIAction_AttackTarget.cpp",
		"/I/wudk/StrategyGame/Source/StrategyGame/Public/StrategyGame.h",
		"/I/wudk/StrategyGame/Source/StrategyGame/Classes/AI/StrategyAIAction.h",
		"/I/wudk/StrategyGame/Source/StrategyGame/Classes/StrategyGameMode.h",
		"/I/wudk/StrategyGame/Source/StrategyGame/Classes/StrategyGameBlueprintLibrary.h",
		"/I/wudk/StrategyGame/Source/StrategyGame/Classes/StrategyGameState.h",
		"/I/wudk/StrategyGame/Source/StrategyGame/Classes/StrategyMiniMapCapture.h",
		"/I/wudk/StrategyGame/Source/StrategyGame/Classes/StrategyProjectile.h",
		"/I/wudk/StrategyGame/Source/StrategyGame/Classes/StrategyResourceNode.h",
		"/I/wudk/StrategyGame/Source/StrategyGame/Classes/StrategyTypes.h",
		"/I/programfiles/UnrealEngine-4.0/UnrealEngine-4.0/Engine/Shaders/BasePassTessellationShaders.usf",
		"/I/programfiles/UnrealEngine-4.0/UnrealEngine-4.0/Engine/Shaders/OneColorShader.usf",
		"/I/programfiles/UnrealEngine-4.0/UnrealEngine-4.0/Engine/Shaders/PostProcessLensBlur.usf",
		"/I/programfiles/UnrealEngine-4.0/UnrealEngine-4.0/Engine/Shaders/ShadowDepthPixelShader.usf",
		"/I/w/TauDisaster/Assets/Resources/pregenmix.txt",
		"/I/w/TauDisaster/Assets/Resources/pregenmap2.txt",
		"/I/w/TauDisaster/Assets/Resources/IsoTile.txt",
		"/I/w/TauDisaster/Assets/Resources/pregenmap.txt",
		"/I/w/TauDisaster/Assets/Code/TActor.cs",
		"/I/w/TauDisaster/Assets/Code/TFactory.cs",
		"/I/w/TauDisaster/Assets/Code/TTile.cs",
		"/I/w/TauDisaster/Assets/Code/AssetLib.cs",
		"/I/w/TauDisaster/Assets/Code/TSector.cs",
		"/I/w/TauDisaster/Assets/Code/TTileDraw.cs",
		"/I/w/TauDisaster/Assets/Code/TActorDraw.cs",
		"/I/w/TauDisaster/Assets/Code/Utilities.cs",
		"/I/w/TauDisaster/Assets/ArtIso/IsoSet.txt",
		"/I/w/TauDisaster/Assets/ArtIso/IsoSet.mat",
		"/I/w/TauDisaster/Assets/ArtIso/AlphaSet.txt",
		"/I/w/ninjajam/Assets/Code/Boss.cs",
		"/I/w/ninjajam/Assets/Code/Factory.cs",
		"/I/w/TauDisaster/.gitignore",
		"/I/w/TauDisaster/taudisaster.sublime-project",
		"/I/w/TauDisaster/taudisaster.sublime-workspace",
		"/C/Users/3up_000/Downloads/usb_driver/android_winusb.inf",
		"/I/programfiles/android/sdk/extras/google/usb_driver/android_winusb.inf",
		"/C/large/movie/paradise kiss/PARADISE.KISS.2011.DVDRip.H264.srt",
		"/I/w/ThreeFish/Assets/Code/CutSceneManager.cs",
		"/I/w/ThreeFish/Assets/Code/CutSceneElement.cs",
		"/I/w/ThreeFish/Assets/Code/SpawnBehaviour.cs",
		"/I/w/ThreeFish/Assets/Code/Boss.cs",
		"/I/w/ThreeSquad/Assets/Boss.cs.cs",
		"/I/w/play-games-plugin-for-unity-master/samples/Minimal/Assets/MainGui.cs",
		"/I/w/ThreeFish/Assets/GooglePlayGames/ISocialPlatform/PlayGamesScore.cs",
		"/I/w/ThreeFish/Assets/Code/GoogGui/TheEndGui.cs",
		"/I/w/ThreeFish/Assets/Code/GoogGui/ShowTutorial.cs",
		"/I/w/ThreeFish/Assets/Code/GoogGui/PilotStatsGUI.cs",
		"/I/w/ThreeFish/Assets/Code/GoogBehavior/PlayerController.cs",
		"/I/w/ThreeFish/Assets/Code/GoogBehavior/LevelController.cs",
		"/I/w/ThreeFish/Assets/Code/GoogGameLogic/Strings.cs",
		"/I/w/ThreeFish/Assets/Resources/Level0.txt",
		"/I/w/ThreeFish/Assets/Code/GoogGameLogic/GameConsts.cs",
		"/I/w/ThreeFish/Assets/Code/GoogGui/MainMenuGUI.cs",
		"/I/w/ThreeFish/Assets/Code/GoogGameLogic/GameManager.cs",
		"/I/w/ThreeFish/Assets/Code/GoogGameLogic/GameIds.cs",
		"/I/w/ThreeFish/Assets/GooglePlayGames/Platforms.meta",
		"/I/w/ThreeFish/Assets/GooglePlayGames/ISocialPlatform/PlayGamesLocalUser.cs",
		"/I/w/ThreeFish/Assets/Art/Textures.meta",
		"/I/w/ThreeFish/Assets/Code/GoogBehavior/Shoots.cs",
		"/I/w/ThreeFish/Assets/Scenes.meta",
		"/I/w/ThreeFish/Assets/Code/GoogGameLogic/PilotStats.cs.meta",
		"/I/w/ThreeFish/Assets/Code/GoogGameLogic/PilotStats.cs",
		"/I/w/ThreeFish/Assets/Plugins.meta",
		"/I/w/ThreeFish/Assets/Plugins/iOS.meta",
		"/I/w/ThreeFish/Assets/Audio/Sfx/LevelClear.mp3",
		"/I/w/ThreeFish/Assets/GooglePlayGames/OurUtils/Logger.cs",
		"/I/w/ThreeFish/Assets/Scenes/GameplayScene.unity",
		"/I/w/ThreeFish/Assets/GooglePlayGames/ISocialPlatform/PlayGamesAchievement.cs",
		"/I/w/ThreeFish/Assets/GooglePlayGames.meta",
		"/I/w/ThreeFish/Assets/Plugins/Android/google-play-services_lib/res/values/maps_attrs.xml",
		"/I/w/ThreeFish/Assets/Art/Materials.meta",
		"/I/w/QuickArrow/QuickArrow.sublime-project",
		"/I/w/QuickArrow/Assets/MainGui.cs",
		"/I/w/QuickArrow/Assets/QuickArrow.sublime-project",
		"/I/website/tacto/over.php",
		"/I/website/tacto/index.php",
		"/I/website/resume.php",
		"/I/w/ninjajam/Assets/Code/Actor/Actor.cs",
		"/I/w/ninjajam/web/index.html",
		"/I/w/ninjajam/Assets/Code/Screens/ScreenManager.cs",
		"/I/w/ninjajam/Assets/Code/Input/InputManager.cs",
		"/I/w/ninjajam/Assets/Code/Entities/EntityBody.cs",
		"/I/w/ninjajam/Assets/Code/Entities/Entity.cs",
		"/I/w/ninjajam/Assets/Code/Screens/PlayerSelectScreen.cs",
		"/I/w/ninjajam/Assets/Code/Screens/Screen.cs",
		"/I/w/ninjajam/Assets/Code/Screens/ScreenController.cs",
		"/I/w/ninjajam/Assets/Code/Screens/ScreenTransitionController.cs",
		"/I/w/ninjajam/Assets/Code/Common/Extensions.cs",
		"/I/w/ninjajam/Assets/Code/Terrain.cs",
		"/I/w/ninjajam/Assets/Code/Globals/Utilities.cs",
		"/I/w/ninjajam/Assets/Code/Spawn.cs",
		"/I/w/ninjajam/Assets/Code/Map.cs",
		"/I/w/ninjajam/Assets/Code/Common/BasicMachine.cs",
		"/I/w/threefish/projectthree/Assets/Scripts/Boat.cs",
		"/I/w/threefish/projectthree/Assets/Scripts/Common/ThreeObject.cs",
		"/I/w/threefish/projectthree/Assets/Scripts/Director.cs",
		"/I/w/BKUP/projectfour/Assets/Scripts/BasicMachine.cs",
		"/I/w/threefish/projectthree/Assets/Scripts/Common/BasicMachine.cs",
		"/I/w/ninjajam/ninjajam.sublime-project",
		"/I/w/threefish/projectgreen/Assets/Code/Common/BasicBody.cs",
		"/I/w/threefish/projectgreen/Assets/Code/CameraController.cs",
		"/I/w/threefish/projectgreen/Assets/Code/Brains/BrainStateData.cs",
		"/I/w/threefish/projectgreen/Assets/Code/GreenBody.cs",
		"/I/w/threefish/projectgreen/Assets/Code/GreenAI.cs",
		"/I/w/threefish/projectgreen/Assets/Code/FishBody.cs",
		"/I/w/threefish/projectgreen/Assets/Code/Director.cs",
		"/I/w/threefish/projectgreen/Assets/Code/FishSpawner.cs",
		"/I/w/threefish/projectthree/.gitignore",
		"/I/w/threefish/projectgreen/Assets/Code/Brains/BrainWorld.cs",
		"/I/w/threefish/projectgreen/Assets/Code/Common/BasicObject.cs",
		"/I/w/threefish/projectgreen/Assets/Code/Brains/BrainActions.cs",
		"/I/w/threefish/projectgreen/Assets/Code/ObjectFactory.cs",
		"/I/w/threefish/projectgreen/Assets/Code/FishObject.cs",
		"/I/w/threefish/projectgreen/Assets/Code/GreenObject.cs",
		"/I/w/threefish/projectgreen/Assets/Code/Common/TimedMachine.cs",
		"/I/w/threefish/projectgreen/Assets/Code/Brains/BrainThinker.cs",
		"/I/w/threefish/projectgreen/Assets/Code/Brains/BrainEntity.cs",
		"/I/w/threefish/projectgreen/Assets/Code/GreenSpawner.cs",
		"/I/w/threefish/projectgreen/Assets/Code/Common/BasicRenderer.cs"
	],
	"find":
	{
		"height": 22.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"*.cs",
			"*Object.cs",
			"*.cs",
			"InputM*",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"beach",
			"CharToSprite",
			"getneare",
			"rawDataW",
			"CharToSpriteVariant",
			"ChopDirection",
			"sw",
			"dirt",
			"CharToSprite",
			".y",
			"CharToMesh",
			"debug.log",
			"entit",
			"arrow",
			"LeaderboardId",
			"appid",
			"gameconsts",
			"LeaderboardId",
			"leaderboard",
			"failed to sign",
			"invtank",
			"mgameoverrea",
			"stars",
			"cubic",
			"minimal",
			"authenticate",
			"DrawSignInButton",
			"threeup",
			"setstartTimer",
			"startTimer",
			"SetStartTimer",
			"starttimer",
			"inputmana",
			"keycode.",
			"RequestRespawn",
			"IsImmortal",
			"ActorState.pl",
			"actorstate.playing",
			"setstate(",
			"IsImmortal",
			"Debug.Log",
			"debug.log",
			"ScreenType.PreGame",
			"ScreenType",
			"SetScreen",
			"gamescreen",
			"nextscreen",
			"Screen",
			"screen",
			"nextscree",
			"autonext",
			"startTimer",
			"SetScreen",
			"SetStartTimer",
			"onpl",
			"startti",
			"setstate(",
			"onplayingenter",
			".PLAYING",
			".playing",
			"MainBodyState",
			"mainMachine",
			"machine",
			"change",
			"machine",
			"previous",
			"failedState",
			"owner",
			"UpdateBallFollowPos",
			"wiggleRate",
			"wiggleAdjust",
			"wiggle",
			"baseRot",
			"thisdir",
			"thisrot",
			"thisdir",
			"thisvel",
			"thispos ",
			"spawnTimer",
			"baserot",
			"originalRot",
			"SetForceDir",
			"ForceType.ENGINE",
			"wiggle",
			"scanpos",
			"currentMoveTarget",
			"Scan",
			"random.",
			"rotation",
			"localscale",
			"facing",
			"lastDirection",
			"normal",
			"thisVel",
			".drag",
			"InitializeEntity",
			"DecideChange",
			"moveToward",
			"NearestTarget",
			"GetMoveToward",
			"moveToward",
			"lastMoveTarget",
			"moveToward =",
			" update(float",
			"update(float",
			"braine",
			"brainconfig",
			"initializeentit",
			"pushDir",
			"pushDir =",
			"pushDir",
			"brainstatedata",
			"new brainstatedata",
			"targetselect",
			"RecomputeTarget",
			"BrainTargetType",
			"motorupd",
			"fishmotor",
			"initmidd",
			"Entity.init",
			"entity.initmiddle",
			"brainConfig",
			"entity",
			"initmiddle",
			"InitMiddle",
			"isInitStartialized",
			"isInitMiddleialized",
			"isInitFinishialized"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"CharToSprite",
			"TorsoState",
			"torsoMachine",
			"brainEntity",
			"isInitStartDone",
			"isInitMiddleDone",
			"isInitFinishDone",
			"InitFinish",
			"InitMiddle",
			"InitStart",
			"isFirstInitialized",
			"FirstInit",
			"Initialize(this, typeof",
			"BasicCondition",
			"typeof",
			")",
			"",
			"CreateCircleCollider",
			"GreenUtils",
			"ForceTypeCount",
			"RenderMode",
			"SocialUtil.",
			"SocialManager",
			"dragCoeff",
			"forceTypeCount",
			"pushForce",
			"SetupGreenType",
			"BOAT_ACC",
			"isCameraFlat",
			"mouseVec",
			"MouseWorldY",
			"MouseWorldX",
			"BasicBody",
			".FISH_",
			".DEBRIS_",
			"machine.Initialize(this, typeof(ThreeState));",
			"machine.Initialize(typeof(ThreeState));",
			"WATER_",
			"PoolDebrisTwo",
			"PoolDebrisOne",
			"PoolFish",
			"PrimLine",
			"RenderChannel"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ChocolateFish.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 73,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/I/w/TauDisaster/taudisaster.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 125,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "ChocolateFish.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"uiti",
				"Utilities.cs"
			],
			[
				"ut",
				"Utilities.cs"
			],
			[
				"ass",
				"AssetLib.cs"
			],
			[
				"tti",
				"TTile.cs"
			],
			[
				"playerc",
				"Code\\GoogBehavior\\PlayerController.cs"
			],
			[
				"levelc",
				"Code\\GoogBehavior\\LevelController.cs"
			],
			[
				"theen",
				"Code\\GoogGui\\TheEndGui.cs"
			],
			[
				"showtu",
				"Code\\GoogGui\\ShowTutorial.cs"
			],
			[
				"pilotst",
				"Code\\GoogGui\\PilotStatsGUI.cs"
			],
			[
				"gamema",
				"Code\\GoogGameLogic\\GameManager.cs"
			],
			[
				"mainm",
				"Code\\GoogGui\\MainMenuGUI.cs"
			],
			[
				"inmp",
				"Input\\InputManager.cs"
			],
			[
				"acto",
				"Actor\\Actor.cs"
			],
			[
				"ent",
				"Entities\\Entity.cs"
			],
			[
				"sc",
				"Screens\\ScreenTransitionController.cs"
			],
			[
				"scre",
				"Screens\\ScreenTransitionController.cs"
			],
			[
				"screenm",
				"Screens\\ScreenManager.cs"
			],
			[
				"bas",
				"Common\\BasicBody.cs"
			],
			[
				"fishsp",
				"FishSpawner.cs"
			],
			[
				"dir",
				"Director.cs"
			],
			[
				"basicb",
				"Common\\BasicBody.cs"
			],
			[
				"fishb",
				"FishBody.cs"
			],
			[
				"cobj",
				"Common\\BasicObject.cs"
			],
			[
				"camerac",
				"CameraController.cs"
			],
			[
				"think",
				"Brains\\BrainThinker.cs"
			],
			[
				"greeno",
				"GreenObject.cs"
			],
			[
				"fisho",
				"FishObject.cs"
			],
			[
				"basico",
				"Common\\BasicObject.cs"
			],
			[
				"actio",
				"Brains\\BrainActions.cs"
			],
			[
				"brain",
				"Brains\\BrainThinker.cs"
			],
			[
				"greenb",
				"GreenBody.cs"
			],
			[
				"fish",
				"FishBody.cs"
			],
			[
				"braine",
				"Brains\\BrainEntity.cs"
			],
			[
				"greenbo",
				"GreenBody.cs"
			],
			[
				"basio",
				"Common\\BasicObject.cs"
			],
			[
				"greeo",
				"GreenObject.cs"
			],
			[
				"time",
				"Common\\TimedMachine.cs"
			],
			[
				"b",
				"Brains\\BrainWorld.cs"
			],
			[
				"",
				"GameVars.cs"
			],
			[
				"basic",
				"Common\\BasicObject.cs"
			],
			[
				"basicm",
				"Common\\BasicMachine.cs"
			],
			[
				"brainw",
				"Brains\\BrainWorld.cs"
			],
			[
				"acti",
				"Brains\\BrainActions.cs"
			],
			[
				"singl",
				"Common\\BasicSingleton.cs"
			],
			[
				"gamev",
				"GameVars.cs"
			],
			[
				"basi",
				"Common\\BasicBody.cs"
			],
			[
				"greenob",
				"GreenObject.cs"
			],
			[
				"basicr",
				"Common\\BasicRenderer.cs"
			],
			[
				"camera",
				"CameraController.cs"
			],
			[
				"uti",
				"Common\\Utilities.cs"
			],
			[
				"greensp",
				"GreenSpawner.cs"
			],
			[
				"gren",
				"GreenObject.cs"
			],
			[
				"gree",
				"GreenAI.cs"
			],
			[
				"obj",
				"ObjectFactory.cs"
			],
			[
				"use",
				"User.cs"
			],
			[
				"green",
				"GreenObject.cs"
			],
			[
				"inputm",
				"InputManager.cs"
			],
			[
				"basics",
				"Common\\BasicSingleton.cs"
			],
			[
				"fishob",
				"FishObject.cs"
			],
			[
				"gre",
				"GreenObject.cs"
			],
			[
				"fishbo",
				"FishBody.cs"
			],
			[
				"basicob",
				"Common\\BasicObject.cs"
			],
			[
				"greenobj",
				"GreenObject.cs"
			],
			[
				"bs",
				"Common\\BasicBody.cs"
			],
			[
				"util",
				"Common\\Utilities.cs"
			],
			[
				"bos",
				"Code\\Boss.cs"
			],
			[
				"mach",
				"Code\\Common\\BasicMachine.cs"
			],
			[
				"menu",
				"Code\\MenuSphere.cs"
			],
			[
				"wor",
				"FarseerScripts\\Base\\FarseerPhysics\\Dynamics\\World.cs"
			],
			[
				"fworl",
				"FarseerScripts\\FSWorldComponent.cs"
			],
			[
				"bodyf",
				"FarseerScripts\\Base\\FarseerPhysics\\Factories\\BodyFactory.cs"
			],
			[
				"fswo",
				"FarseerScripts\\FSWorldComponent.cs"
			],
			[
				"body",
				"FarseerScripts\\Base\\FarseerPhysics\\Dynamics\\Body.cs"
			],
			[
				"bo",
				"Boat.cs"
			],
			[
				"three",
				"Common/ThreeObject.cs"
			],
			[
				"de",
				"Debris.cs"
			],
			[
				"boa",
				"Boat.cs"
			],
			[
				"thre",
				"Common/ThreeObject.cs"
			],
			[
				"hook",
				"Hook.cs"
			],
			[
				"deb",
				"Debris.cs"
			],
			[
				"gam",
				"GameParams.cs"
			],
			[
				"game",
				"GameParams.cs"
			],
			[
				"inp",
				"Common/InputManager.cs"
			],
			[
				"line",
				"Line.cs"
			],
			[
				"in",
				"InputManager.cs"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 392.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 230.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
